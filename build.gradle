plugins {
    id 'org.m2ci.msp.flaml' version '0.3.0'
    id 'de.dfki.mary.voicebuilding-legacy' version '5.4'
}

group 'de.dfki.mary'
version '5.3-SNAPSHOT'

marytts {
    voice {
        name = 'dfki-ot'
        language = 'tr'
        gender = 'male'
        type = 'unit selection'
        description = 'A male Turkish unit selection voice'
        license {
            name = 'Creative Commons Attribution-NoDerivs 3.0 Unported'
            shortName = 'CC-BY-ND'
            url = 'http://mary.dfki.de/download/by-nd-3.0.html'
        }
        samplingRate = 16000
    }
}

repositories {
    ivy {
        url 'https://github.com/marytts'
        layout 'pattern', {
            ivy '[module]/releases/download/v[revision]/ivy-[revision].xml'
            artifact '[module]/releases/download/v[revision]/[module]-[revision].[ext]'
        }
    }
}

dependencies {
    data group: 'de.dfki.mary', name: 'dfki-ot-data', version: '0.2-rc1'
}

task unpackData(type: CopyFlamlFiles) {
    yamlFile = file("$buildDir/dfki-ot-data.yaml")
    flacFile = file("$buildDir/dfki-ot-data.flac")
}

extractWavFiles {
    flacFile = unpackData.flacFile
    yamlFile = unpackData.yamlFile
    destDir = layout.buildDirectory.dir('wav_orig')
}

extractTextFiles {
    yamlFile = unpackData.yamlFile
}

extractLabFiles {
    yamlFile = unpackData.yamlFile
}

wav {
    srcDir = extractWavFiles.destDir
}

basenames {
    textDir = extractTextFiles.destDir
    labDir = extractLabFiles.destDir
    exclude 'ot0044',
            'ot0100',
            'ot0103',
            'ot0256',
            'ot0282',
            'ot0291',
            'ot0307',
            'ot0323',
            'ot0370',
            'ot0453',
            'ot0497',
            'ot0538',
            'ot0569',
            'ot0600',
            'ot0662',
            'ot0673',
            'ot0745',
            'ot0746',
            'ot0774',
            'ot0791',
            'ot0818',
            'ot0853',
            'ot0882',
            'ot0883',
            'ot0893',
            'ot0918',
            'ot0944',
            'ot1073',
            'ot1106',
            'ot1132',
            'ot1159'
}

class CopyFlamlFiles extends DefaultTask {

    @OutputFile
    final RegularFileProperty yamlFile = newOutputFile()

    @OutputFile
    final RegularFileProperty flacFile = newOutputFile()

    @TaskAction
    void copy() {
        project.copy {
            from project.files(project.configurations.data)
            into project.buildDir
            filesMatching '*.zip', { details ->
                project.copy {
                    from project.zipTree(details.file)
                    into project.buildDir
                }
                details.exclude()
            }
            filesMatching '*.flac', {
                it.name = flacFile.get().asFile.name
            }
        }
    }
}
